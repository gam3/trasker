#! /bin/sh
#
#		Written by Miquel van Smoorenburg <miquels@cistron.nl>.
#		Modified for Debian GNU/Linux
#		by Ian Murdock <imurdock@gnu.ai.mit.edu>.
#
#

PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
DAEMON=/usr/src/gam3/tasker/perl/script/server.pl
NAME=tasker
DESC="tasker server"

export PERL5LIB=/usr/src/gam3/tasker/perl/blib/lib

test -x $DAEMON || exit 0

set -e

case "$1" in
  start)
    echo -n "Starting $DESC: $NAME"
    start-stop-daemon --start --quiet --oknodo --exec $DAEMON
    echo "."
    ;;
  stop)
    echo -n "Stopping $DESC: $NAME "
    start-stop-daemon --stop --quiet --oknodo --exec $DAEMON
    echo "."
    ;;
  restart|force-reload)
    #
    #	If the "reload" option is implemented, move the "force-reload"
    #	option to the "reload" entry above. If not, "force-reload" is
    #	just the same as "restart".
    #
    echo -n "Restarting $DESC: $NAME"
    start-stop-daemon --stop --quiet --oknodo --exec $DAEMON
    sleep 1
    start-stop-daemon --start --quiet --oknodo --exec $DAEMON
    echo "."
    ;;
  *)
    N=/etc/init.d/$NAME
    # echo "Usage: $N {start|stop|restart|reload|force-reload}" >&2
    echo "Usage: $N {start|stop|restart|force-reload}" >&2
    exit 1
    ;;
esac

exit 0
__END__
#!/usr/bin/perl
use strict;

use Getopt::Long;
use Pod::Usage;

use Email::Simple;
use MIME::Lite;
use TTDB::User;

use TTDB::DBI qw (dbi_setup);

use Email::Date;

use Date::Calc::MySQL;
use Date::Parse;

our $VERSION = "0.0.1";

our $site = 'http://www.gam3.com/tasker';

our ($opt_help, $opt_man, $opt_versions, $opt_user);
our ($opt_db_database, $opt_db_user, $opt_db_password);

sub main
{
    my $opt_debug   = 0;

    GetOptions(
      'debug=i'   => \$opt_debug,
      'help!'     => \$opt_help,
      'man!'      => \$opt_man,
      'versions!' => \$opt_versions,
      'user=s'      => \$opt_user,
    ) or pod2usage(-verbose => 1) && exit;

    pod2usage(-verbose => 1) && exit if ($opt_debug !~ /^[01]$/);
    pod2usage(-verbose => 1) && exit if defined $opt_help;
    pod2usage(-verbose => 2) && exit if defined $opt_man;
    exit if $opt_versions;

    dbi_setup(
	database => $opt_db_database || 'test_tasker',
	user => $opt_db_user || 'tasker',
	password => $opt_db_password || 'seviceforward',
    );

    my $user = TTDB::User->new(user => $opt_user) or die "Unknown user $opt_user";

    my @data = <>;

    open OUT, ">>/tmp/mail";
    my $msg = Email::Simple->new( join('', @data) );
    print OUT join("\n", @data);
    print OUT "-----\n";
    close OUT;

    use Data::Dumper;

    print $msg->header('From'), "\n";
    print $msg->header('Subject'), "\n";
    print $msg->body(), "\n";
    print $msg->header('Date'), "\n";

    my $date;
    if (my $d = $msg->header('Date')) {
        my @date = reverse((localtime(Date::Parse::str2time($d)))[0..5]);
	$date[0] += 1900;
	$date[1] += 1;

	$date = Date::Calc::MySQL->new(@date);
    }

    for my $line (split('\n', $msg->body())) {
	if ($line =~ /State/i) {
	    print "State\n";
	} elsif ($line =~ /Project\s+(\d+)/i) {
	    print "Set $1\n";
	} elsif ($line =~ /Push\s+(\d+)/i) {
	    print "Push $1\n";
	} elsif ($line =~ /Pop/i) {
	    print "Pop\n";
	} elsif ($line =~ /Note: (.*)$/i) {
            $user->add_note(note => $1, time => $date);
	} else {
	    print "Fail\n";
	}
    }
}

main;

END {
    if (defined $opt_versions) {
	print
	  "\nModules, Perl, OS, Program info:\n",
	  "  TTDB::User            $TTDB::User::VERSION\n",
	  "  Pod::Usage            $Pod::Usage::VERSION\n",
	  "  Getopt::Long          $Getopt::Long::VERSION\n",
	  "  strict                $strict::VERSION\n",
	  "  Perl                  $]\n",
	  "  OS                    $^O\n",
	  "  $0\t\t$VERSION\n",
	  "  $site\n",
	  "\n\n";
    }
}

__END__

=head1 NAME

 tasker-mail

=head1 SYNOPSIS

cat message | B<tasker-mail> B<--user> I<userid>

In .promailrc

 :0
 * ^TO_gam3-tasker@gam3.net
 |/usr/src/gam3/tasker/scripts/tasker-mail --user gam3

=head1 DESCRIPTION

 Run tasker remotely with email messages.

=head1 ARGUMENTS

 This program takes no arguments.  Data comes from the standard input.

=head1 OPTIONS

=over 5

=item B<--user> I<userid>

Control tasker for this tasker userid.

=item B<--versions>

print Modules, Perl, OS, Program info

=item B<--debug> I<0>

don't print debugging information (default)

=item B<--debug> I<1>

print debugging information

=back

=head1 AUTHOR

G. Allen Morris III <tasker@gam3.net>

=head1 TESTED

 Modules, Perl, OS, Program info:
 TTDB		       0.00
 Pod::Usage            1.33
 Getopt::Long          2.35
 strict                1.03
 Perl                  5.008008
 OS                    linux

=head1 BUGS

None that I know of.

=head1 TODO

We could use more security.

=head1 UPDATES

 2006-10-08   06:22 EST
   Initial working code

=cut


